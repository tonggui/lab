{"product-package":{"code":0,"data":{"id":86,"name":"product-package","cname":"商品物料包","create_time":"2021-06-15T12:23:30.419Z","compIds":"71,73,76,77,81,96,97","usedCount":null,"downloadCount":null,"version":[{"id":558,"componentId":71,"componentName":"","componentModuleId":0,"versionNum":"1.0.0","flag":0,"imgs":"","guide":"## 组件简介\n后端分页列表。当属性`params`改变时，ajaxTable会自动发起请求，拉取当前页码最新数据。\n\n## 全局引入\n`rac-ajax-table`\n\n## 组件数据格式规范\n### 1. request\n使用ajaxTable后会默认加上2个参数： page, pageSize\n\n```json\npage: 1     //当前处于第几页，从1开始\npageSize: 10   //每页多少条数据\n//其他参数\n```\n\n### 2. reponse \n```json\n{\n  code: 0,  //0成功，1失败\n  msg: ''   //错误信息\n  data: {\n    list: [],  //列表数据\n    total: 100,  //数据总数\n    pageSize: 10,  //每页多少条，不建议前端用此参数做逻辑\n    page: 1       //当前页页码，不建议前端用此参数做逻辑\n  }\n}\n```\n\n## 操作后刷新列表\n<demo1></demo1>\n\n:::demo \n```html\n<template>\n  <AjaxTable\n    method=\"post\"\n    :columns=\"cols\"\n    url=\"/list/success\"\n    :params=\"params\"\n    :showSizer=\"true\"\n    ref=\"ajaxtable\"\n    @dataLoaded=\"handleData\"\n  />\n</template>\n\n<script>\nimport AjaxTable from '@sfe/montage.ajax-table'\n\nconst Cols = [\n  {\n    title: '订单号',\n    key: 'orderNo'\n  },\n  {\n    title: '租户ID',\n    key: 'tenantId'\n  },\n  {\n    title: '状态',\n    key: 'status'\n  },\n  {\n    title: '操作',\n    render (h, params, {flushData}) {\n      return <a href=\"javascript:;\" onClick={() => { flushData() }}>删除</a>\n    }\n  }\n]\n\nexport default {\n  name: 'demo1',\n  components: {\n    AjaxTable\n  },\n  data () {\n    return {\n      cols: Cols,\n      params: {\n        poiId: 10006,\n        orderId: 12333\n      }\n    }\n  },\n  methods: {\n    handleData (data) {\n      console.log(data)\n    }\n  }\n}\n</script>\n\n```\n:::\n\n\n## 无搜索结果\n<demo2></demo2>\n\n:::demo \n```html\n<template>\n  <AjaxTable\n    method=\"get\"\n    :columns=\"cols\"\n    url=\"/list/empty\"\n    :params=\"params\"\n    :pageSize=\"2\"\n    ref=\"ajaxtable\"\n    :noDataText=\"`<a href='http://www.baidu.com'>点我到百度</a>`\"\n  />\n</template>\n\n<script>\nimport AjaxTable from '@sfe/montage.ajax-table'\n\nconst Cols = [\n  {\n    title: '订单号',\n    key: 'orderNo'\n  },\n  {\n    title: '租户ID',\n    key: 'tenantId'\n  },\n  {\n    title: '状态',\n    key: 'status'\n  },\n  {\n    title: '操作',\n    render: (h, params) => {\n      return h('a', '删除')\n    }\n  }\n]\n\nexport default {\n  name: 'demo2',\n  components: {\n    AjaxTable\n  },\n  data () {\n    return {\n      cols: Cols,\n      params: {\n        poiId: 10006,\n        orderId: 12333\n      }\n    }\n  }\n}\n</script>\n\n```\n:::\n\n\n## props\n\n| 属性               | 说明                                                                                                        | 类型                    | 默认值                    | 是否必须 |\n| ------------------ | ----------------------------------------------------------------------------------------------------------- | ----------------------- | ------------------------- | -------- |\n| colMinWidth        | 每列最小宽度                                                                                                | Number                  | 100                       | 否       |\n| height             | 列表高度                                                                                                    | Number                  | auto:高度自适应           | 否       |\n| columns            | 表头                                                                                                        | Array                   | 参考config格式            | 是       |\n| autoRequest        | 初始化时自动请求数据                                                                                        | Boolean                 | true                      | 否       |\n| method             | 请求method                                                                                                  | String: `POST`或者`GET` | `POST`                    | 否       |\n| url                | 请求接口                                                                                                    | String                  |                           | 是       |\n| params             | 请求参数，改变时，组件自动发起请求，拉取当前页码最新数据                                                    | Object                  | 空对象                    | 否       |\n| dataRinse          | 接口返回后，渲染列表前执行的处理函数                                                                        | Function                | function(list, data)      | 否       |\n| compatibleRespFunc | 见 compatibleRespFunc 使用说明                                                                              | Function                | function(res){return res} | 否       |\n| pageSize           | 每页大小                                                                                                    | Number                  | 20                        | 否       |\n| showSizer          | 显示调整每页条数的控件，如果设置为true，`pageSize`属性不生效，默认条数为`pageSizeOpts`的第一个值            | Boolean                 | false                     | 否       |\n| pageSizeOpts       | 每条条数                                                                                                    | Array                   | [10, 20, 50]              | 否       |\n| noDataText         | 接口请求成功，返回结果为空时显示（没有搜索时为：‘请输入查询条件，点击按钮查询’；接口异常时为接口返回的msg） | String                  | \"没有查询到数据\"          | 否       |\n| dataLoaded         | 请求数据返回时触发                                                                                          | 请求数据                |\n\n## 支持Table的默认props\n| 属性   |\n|--|\n|width|\n|size|\n|maxHeight|\n|border|\n|showHeader|\n|highlightRow|\n|rowClassName|\n|context|\n|noFilteredDataText|\n|disabledHover|\n|draggable|\n|tooltipTheme|\n|rowKey|\n|spanMethod|\n\n###  compatibleRespFunc 说明\n用于兼容，当服务端返回的数据格式不是“{code:Number,data:{list:Array,total:Number},msg:String}”时的处理函数。\n该函数必须返回:{code:Number,data:{list:Array,total:Number},msg:String}\n\n\n## events\n| 事件名          | 返回值      | 说明                                |\n| --------------- | ----------- | ----------------------------------- |\n| dataLoaded      | respnseData | 请求数据返回时触发                  |\n| loading         | Boolean     | 是否处于请求数据中状态              |\n| paginate        | pageId      | 改变页码时触发                      |\n| selectionChange | []          | selection模式下，改变已选数据时触发 |\n\n\n## methods\n| 方法             | 说明                                   | 参数            |\n| ---------------- | -------------------------------------- | --------------- |\n| handleChangePage | 改变页码为传入的页码，抛出页码改变事件 | pageId 目标页码 |\n","packageInfo":"","exports":"","ironcode":null,"misname":"liujie66","starCount":0,"likeCount":0,"usedCount":0,"createTime":"2019-09-26T14:31:08.470Z","updateTime":"2021-04-08T14:39:57.155Z","component":{"id":71,"name":"ajax-table","cname":"异步表格","description":"后端分页列表。当属性`params`改变时，ajaxTable会自动发起请求，拉取当前页码最新数据。","status":0,"misname":"liujie66","type":0,"moduleName":"","starCount":0,"downloadCount":null,"likeCount":0,"usedCount":0,"createTime":"2019-09-26T14:31:08.454Z","updateTime":"2020-05-09T08:02:08.000Z","versionNum":"","author":[{"id":49,"accountId":2326197,"mis":"hemiao07","name":"何苗","avatar":null,"email":"hemiao07@meituan.com","createTime":"2019-07-30T08:52:20.079Z","updateTime":"2019-07-30T08:52:20.079Z"}],"moduleKey":null}},{"id":560,"componentId":73,"componentName":"","componentModuleId":0,"versionNum":"1.0.2","flag":0,"imgs":"","guide":"## 组件简介\n可编辑表格组件，在表格中编辑数据\n\n\n## 全局引入\n`rac-edit-table`\n\n\n## 代码示例\n<demo1></demo1>\n\n:::demo \n```html\n<template>\n  <div>\n    <edit-cell v-model=\"data\" :status=\"editable\" />\n    <br/>\n    <Button @click=\"edit\">编辑</Button>\n    <Button @click=\"save\">保存</Button>\n  </div>\n</template>\n<script>\nimport editTable from '@sfe/montage.edit-table'\nconst editCell = editTable.EditCell\n\nexport default {\n  components: {editCell},\n  data () {\n    return {\n      editable: false,\n      data: 'test'\n    }\n  },\n  methods: {\n    edit () {\n      this.editable = true\n    },\n    save () {\n      this.editable = false\n    }\n  }\n}\n</script>\n<style lang=\"less\">\n\n</style>\n\n```\n:::\n\n<demo2></demo2>\n\n:::demo \n```html\n<template>\n  <EditTable :columns=\"columns\" :data=\"data\"/>\n</template>\n<script>\nimport {Input} from '@sfe/bootes'\nimport EditTable from '@sfe/montage.edit-table'\nexport default {\n  data () {\n    return {\n      columns: [{\n        type: 'selection',\n        width: 90\n      }, {\n        key: 'name',\n        title: '姓名',\n        width: 100,\n        editable: false,\n        value (data) {\n          return data['name'] + data['age']\n        }\n      }, {\n        key: 'age',\n        title: '年龄',\n        width: 120,\n        editable: true,\n        render (h, {value, onInput}) {\n          return <Input value={value} onInput={v => onInput(v)}/>\n        },\n        rules: [\n          {required: true, message: '请填写年龄'}\n        ]\n      }, {\n        key: 'gender',\n        title: '性别',\n        width: 100,\n        value (data) {\n          if (this.data === 1) {\n            return '男'\n          } else {\n            return '女'\n          }\n        }\n      }],\n      data: [{\n        name: '张三',\n        age: 20,\n        gender: 0\n      }, {\n        name: '李四',\n        age: 20,\n        gender: 1\n      }]\n    }\n  },\n  components: {EditTable}\n}\n</script>\n<style lang=\"less\">\n\n</style>\n\n```\n:::\n\n<demo3></demo3>\n\n:::demo \n```html\n<template>\n  <EditTable :columns=\"columns\" :data=\"data\" :errors=\"error\"/>\n</template>\n<script>\nimport {Input} from '@sfe/bootes'\nimport EditTable from '@sfe/montage.edit-table'\nexport default {\n  data () {\n    return {\n      columns: [{\n        type: 'selection',\n        width: 90\n      }, {\n        key: 'name',\n        title: '姓名',\n        width: 100,\n        editable: false,\n        value (data) {\n          return data['name'] + data['age']\n        }\n      }, {\n        key: 'age',\n        title: '年龄',\n        width: 120,\n        editable: true,\n        render (h, {value, onInput}) {\n          return <Input value={value} onInput={v => onInput(v)}/>\n        },\n        rules: [\n          {required: true, message: '请填写年龄'}\n        ]\n      }, {\n        key: 'gender',\n        title: '性别',\n        width: 100,\n        renderTitle (h) {\n          return <div>性别render</div>\n        },\n        value (data) {\n          if (this.data === 1) {\n            return '男'\n          } else {\n            return '女'\n          }\n        }\n      }],\n      data: [{\n        name: '张三',\n        age: 20,\n        gender: 0\n      }, {\n        name: '李四',\n        age: 20,\n        gender: 1\n      }],\n      error: [{\n        row: [1],\n        message: '年龄必须为整数'\n      }]\n    }\n  },\n  components: {EditTable}\n}\n</script>\n<style lang=\"less\">\n\n</style>\n\n```\n:::\n\n<demo4></demo4>\n\n:::demo \n```html\n<template>\n  <div>\n  <EditTable :columns=\"columns\" :data=\"data\" :errors=\"error\" rowKey=\"name\"/>\n  <Button @click=\"deleteRow\">删除</Button>\n  </div>\n</template>\n<script>\nimport {Input} from '@sfe/bootes'\nimport EditTable from '@sfe/montage.edit-table'\nexport default {\n  data () {\n    return {\n      columns: [{\n        type: 'selection',\n        width: 90\n      }, {\n        key: 'name',\n        title: '姓名',\n        width: 100,\n        editable: false,\n        value (data) {\n          return data['name'] + data['age']\n        }\n      }, {\n        key: 'age',\n        title: '年龄',\n        width: 120,\n        editable: true,\n        render (h, {value, onInput}) {\n          return <Input value={value} onInput={v => onInput(v)}/>\n        },\n        rules: [\n          {required: true, message: '请填写年龄'}\n        ]\n      }, {\n        key: 'gender',\n        title: '性别',\n        width: 100,\n        renderTitle (h) {\n          return <div>性别render</div>\n        },\n        value (data) {\n          if (this.data === 1) {\n            return '男'\n          } else {\n            return '女'\n          }\n        }\n      }],\n      data: [{\n        name: '张三',\n        age: 20,\n        gender: 0\n      }, {\n        name: '李四',\n        age: 20,\n        gender: 1\n      }],\n      error: []\n    }\n  },\n  methods: {\n    deleteRow () {\n      this.data.splice(0, 1)\n    }\n  },\n  components: {EditTable}\n}\n</script>\n<style lang=\"less\">\n\n</style>\n\n```\n:::\n\n<demo5></demo5>\n\n:::demo \n```html\n<template>\n  <div>\n  <EditTable :columns=\"columns\"\n     :data=\"data\"\n    :errors=\"error\"\n     rowKey=\"name\"\n     @on-selection-change=\"getData\"\n     @on-select-all=\"handleSelectAll\"\n     @on-select-all-cancel=\"handleSelectAllCancel\"\n     @on-select-check=\"handleSelect\"\n     @on-select-cancel=\"handleSelectCancel\"\n\n    />\n  <Button @click=\"deleteRow\">删除</Button>\n  <Button @click=\"addRow\">添加一行</Button>\n  </div>\n</template>\n<script>\nimport {Input} from '@sfe/bootes'\nimport EditTable from '@sfe/montage.edit-table'\nvar i = 0\nexport default {\n  data () {\n    return {\n      columns: [{\n        type: 'selection',\n        width: 90\n      }, {\n        key: 'name',\n        title: '姓名',\n        width: 100,\n        editable: false,\n        value (data) {\n          return data['name'] + data['age']\n        }\n      }, {\n        key: 'age',\n        title: '年龄',\n        width: 120,\n        editable: true,\n        render (h, {value, onInput}) {\n          return <Input value={value} onInput={v => onInput(v)}/>\n        },\n        rules: [\n          {required: true, message: '请填写年龄'}\n        ]\n      }, {\n        key: 'gender',\n        title: '性别',\n        width: 100,\n        renderTitle (h) {\n          return <div>性别render</div>\n        },\n        value (data) {\n          if (this.data === 1) {\n            return '男'\n          } else {\n            return '女'\n          }\n        }\n      }],\n      data: [{\n        _checked: true,\n        name: '张三',\n        age: 20,\n        gender: 0\n      }, {\n        _disabled: true,\n        name: '李四',\n        age: 20,\n        gender: 1\n      }],\n      error: []\n    }\n  },\n  methods: {\n    deleteRow () {\n      this.data.splice(0, 1)\n    },\n    addRow () {\n      this.data.push({\n        name: `${i++}测试姓名`,\n        age: 20,\n        genger: 1\n      })\n    },\n    getData (data) {\n      // console.log(data)\n    },\n    handleSelectAll (selection, row) {\n      console.log('select-all', selection, row)\n    },\n    handleSelectAllCancel (selection, row) {\n      console.log('select-all-cancel', selection, row)\n    },\n    handleSelect (selection, row) {\n      console.log('select', selection, row)\n    },\n    handleSelectCancel (selection, row) {\n      console.log('select-cancel', selection, row)\n    }\n  },\n  components: {EditTable}\n}\n</script>\n<style lang=\"less\">\n\n</style>\n\n```\n:::\n\n\n## props用法\n|属性名|说明|类型|默认值|是否必须|\n|-|-|-|-|-|\n|columns|定义表格列信息|Array|[]|是|\n|data|表格展示的数据|Array|[]|是|\n|validator|行验证函数|Function|function(a, b) {}|否|\n|errors|行错误信息|\bArray|[]|否|\n|noDataText|没有数据的提示语句|String|'暂时无记录'|否|\n|rowKey|取每行数据中render的key|String|''|否|\n\n## columns用法\n|属性名|说明|类型|默认值|是否必须|\n|-|-|-|-|-|\n|type|是否定义checkbox|String|'selection'|否|\n|width|定义每一列长度|Number|0|是|\n|key|定义列的key|String|''|是|\n|title|列的表头标题|String|''|是|\n|editable|列是否可以编辑|boolean|false|否|\n|rules|单元格验证规则|Array,Function|[]|否|\n|value|格式化输出表格内容|Function|function(data) {}|否|\n|isOp|自定义格式化展示，设置后render函数|Boolean|false|否|\n|renderTitle|render列的表头信息|Function|function(h){}|否|\n|render|渲染编码模式render|Function|function(h, {value, data, row, column, onInput}){}|否|\n|renderShow|渲染非编辑模式下render|Function|function(h, {value, data, row, column, onInput}){}|否|\n\n## events用法\n|事件名|说明|返回值|\n|-|-|-|\n|on-selection-change|选择项发生变化时，触发|返回选中的data|\n|on-select-check|单选checkbox，触发|返回点击单选的行|\n|on-select-cancel|取消checkbox，触发|取消列表|\n|on-select-all|全选|选中列表|\n|on-select-all-cancel|全部取消|取消列表|\n|on-edit-change|表格数据发生变化时，触发|返回编辑后的data|\n\n## 获取编辑后数据\n\n```\n  this.$refs['table'].getData()\n```\n## 编辑后验证表格\n```\n  this.$refs['table'].validate((valid) => {\n\n  })\n```\n","packageInfo":"","exports":"","ironcode":null,"misname":"liujie66","starCount":0,"likeCount":0,"usedCount":0,"createTime":"2019-09-26T14:32:52.194Z","updateTime":"2021-04-08T14:39:57.155Z","component":{"id":73,"name":"edit-table","cname":"可编辑列表","description":"可编辑表格组件，在表格中编辑数据","status":0,"misname":"liujie66","type":0,"moduleName":"","starCount":0,"downloadCount":null,"likeCount":0,"usedCount":0,"createTime":"2019-09-26T14:32:52.181Z","updateTime":"2021-03-31T08:06:53.000Z","versionNum":"","author":[{"id":74,"accountId":2432652,"mis":"chenjunlin05","name":"陈俊林","avatar":null,"email":"chenjunlin05@meituan.com","createTime":"2019-07-31T13:16:20.913Z","updateTime":"2019-07-31T13:16:20.913Z"}],"moduleKey":null}},{"id":564,"componentId":77,"componentName":"","componentModuleId":0,"versionNum":"1.0.0","flag":0,"imgs":"","guide":"\n## 组件简介\n前端分页列表。\n\n## 全局引入\n`rac-local-table`\n\n## 翻页\n<demo1></demo1>\n\n:::demo \n```html\n\n<template>\n    <LocalTable\n      :value=\"localData\"\n      :columns=\"columns\"\n      :pageSize=\"2\"\n    />\n</template>\n\n<script>\nimport LocalTable from '@sfe/montage.local-table'\n\nexport default {\n  name: 'localTableDemo1',\n  components: {\n    LocalTable\n  },\n  data () {\n    return {\n      columns: [\n        {\n          title: '租户',\n          key: 'tenantId'\n        },\n        {\n          title: '门店',\n          key: 'poiId'\n        },\n        {\n          title: '状态',\n          key: 'status'\n        }\n      ],\n      localData: [{\n        'orderNo': '1087282196961587287',\n        'tenantId': 1000001,\n        'poiId': 99999993,\n        'status': 1\n      },\n      {\n        'orderNo': '1087282196961587287',\n        'tenantId': 1000002,\n        'poiId': 99999993,\n        'status': 2\n      },\n      {\n        'orderNo': '1087282196961587287',\n        'tenantId': 1000003,\n        'poiId': 99999993,\n        'status': 3\n      },\n      {\n        'orderNo': '1087282196961587287',\n        'tenantId': 1000004,\n        'poiId': 99999993,\n        'status': 2\n      },\n      {\n        'orderNo': '1087282196961587287',\n        'tenantId': 1000005,\n        'poiId': 99999993,\n        'status': 1\n      }\n      ]\n    }\n  }\n}\n</script>\n\n```\n:::\n\n\n## 删除数据\n<demo2></demo2>\n\n:::demo \n```html\n<template>\n    <LocalTable\n      :value=\"localData\"\n      :columns=\"columns\"\n      :pageSize=\"2\"\n    />\n</template>\n\n<script>\nimport LocalTable from '@sfe/montage.local-table'\n\nexport default {\n  name: 'localTableDemo2',\n  components: {\n    LocalTable\n  },\n  data () {\n    return {\n      columns: [\n        {\n          title: '租户',\n          key: 'tenantId'\n        },\n        {\n          title: '门店',\n          key: 'poiId'\n        },\n        {\n          title: '状态',\n          key: 'status'\n        },\n        {\n          title: '操作',\n          key: 'operation',\n          render: function (h, params, actions) {\n            return h('div', [\n              h('a', {\n                attrs: {\n                  class: 'primary-link',\n                  href: 'javascript:;'\n                },\n                on: {\n                  click: (e) => {\n                    let { removeData } = actions\n                    removeData(params.index)\n                  }\n                }\n              }, '删除')\n            ])\n          }\n        }\n      ],\n      localData: [{\n        'orderNo': '1087282196961587287',\n        'tenantId': 1000001,\n        'poiId': 99999993,\n        'status': 1\n      },\n      {\n        'orderNo': '1087282196961587287',\n        'tenantId': 1000002,\n        'poiId': 99999993,\n        'status': 2\n      },\n      {\n        'orderNo': '1087282196961587287',\n        'tenantId': 1000003,\n        'poiId': 99999993,\n        'status': 3\n      },\n      {\n        'orderNo': '1087282196961587287',\n        'tenantId': 1000004,\n        'poiId': 99999993,\n        'status': 2\n      },\n      {\n        'orderNo': '1087282196961587287',\n        'tenantId': 1000005,\n        'poiId': 99999993,\n        'status': 1\n      }]\n    }\n  }\n}\n</script>\n\n```\n:::\n\n\n\n## props\n\n| 属性     | 说明                                                                 | 类型   | 默认值          | 是否必须 |\n| -------- | -------------------------------------------------------------------- | ------ | --------------- | -------- |\n| height   | 列表高度                                                             | Number | auto:高度自适应 | 否       |\n| pageSize | 每页大小                                                             | Number | 20              | 否       |\n| columns  | 表头                                                                 | Array  | 参考config格式  | 是       |\n| value    | 绑定的值，可使用 v-model 双向绑定.表格数据，自动更新，原理：对象引用 | Array  |                 | 否       |\n| show-sizer | 显示分页，用来改变page-size                                          | Boolean | false              | 否       |\n| page-size-opts | 每页条数切换的配置                                          | Array | [5, 10, 15, 20]              | 否       |\n| no-data-text | 数据为空时显示的提示内容                                         | String | 暂无数据              | 否       |\n\n\n## events\n| 事件名              | 说明               | 返回值       |\n| ------------------- | ------------------ | ------------ |\n| on-selection-change | 选项发生改变时触发 | 当前已选数据 |\n| on-select-all      | 在多选模式下有效，点击全选时触发     | 已选项数据,改变状态的数据 |\n| on-select-all-cancel      | 在多选模式下有效，点击取消全选时触发     | 已选项数据,改变状态的数据|\n| on-select      | 在多选模式下有效，选中某一项时触发     |  已选项数据,刚选择的项数据 |\n| on-select-cancel      | 在多选模式下有效，取消选中某一项时触发    | 已选项数据,刚取消的项数据 | \n| on-page-size-change     | 切换每页条数时的回调，返回切换后的每页条数    | page-size |  \n\n\n## methods\n\n| 方法名     | 返回值 | 说明               |\n| ---------- | ------ | ------------------ |\n| removeData | 无     | 作为render函数的参数返回 render(h, {row}, {removeData}) |\n","packageInfo":"","exports":"","ironcode":null,"misname":"liujie66","starCount":0,"likeCount":0,"usedCount":0,"createTime":"2019-09-26T14:34:52.409Z","updateTime":"2021-04-08T14:39:57.155Z","component":{"id":77,"name":"local-table","cname":"前端分页列表","description":"前端分页列表。","status":0,"misname":"liujie66","type":0,"moduleName":"","starCount":0,"downloadCount":null,"likeCount":0,"usedCount":0,"createTime":"2019-09-26T14:34:52.397Z","updateTime":"2020-05-21T13:36:17.000Z","versionNum":"","author":[{"id":66,"accountId":2416815,"mis":"wangqi82","name":"王琦","avatar":null,"email":"wangqi82@meituan.com","createTime":"2019-07-31T06:52:50.686Z","updateTime":"2019-07-31T06:52:50.686Z"}],"moduleKey":null}},{"id":585,"componentId":81,"componentName":"","componentModuleId":0,"versionNum":"1.0.1","flag":0,"imgs":"","guide":"# RangeInput\n\n<br>\n\n## 组件简介\n范围输入组件。\n\n基于Bootes的InputNumber组件封装，以数组形式返回一个范围。\n\n支持在Bootes Form组件中使用。  \n\n## 全局引入\n`rac-range-input`\n\n## 代码示例\n<demo1></demo1>\n\n:::demo \n```html\n<template>\n  <RangeInput active-change>\n    <Col slot=\"divider\" :span=\"2\" class=\"divider\">\n      至\n    </Col>\n  </RangeInput>\n</template>\n\n<script>\nimport RangeInput from '@sfe/montage.range-input'\n\nexport default {\n  components: {\n    RangeInput\n  },\n  data () {\n    return {}\n  }\n}\n</script>\n\n<style lang=\"less\" scoped>\n.divider {\n  line-height: 34px;\n  text-align: center;\n}\n</style>\n\n```\n:::\n\n\n<demo2></demo2>\n\n:::demo \n```html\n<template>\n  <RangeInput\n    :minRange=\"minRange\"\n    :maxRange=\"maxRange\"\n  />\n</template>\n\n<script>\nimport RangeInput from '@sfe/montage.range-input'\n\nexport default {\n  components: {\n    RangeInput\n  },\n  data () {\n    return {\n      minRange: [0, 10],\n      maxRange: [100, 200]\n    }\n  }\n}\n\n</script>\n\n```\n:::\n\n\n<demo3></demo3>\n\n:::demo \n```html\n<template>\n<Form ref=\"form\" :model=\"formData\" :rules=\"rules\">\n  <FormItem prop=\"range\">\n    <RangeInput active-change v-model=\"formData.range\">\n      <Col slot=\"divider\" :span=\"2\" class=\"divider\">\n        至\n      </Col>\n    </RangeInput>\n  </FormItem>\n  <Button @click=\"handleSubmit\" type=\"primary\">\n    提交\n  </Button>\n  <Button @click=\"handleReset\">\n    重置\n  </Button>\n</Form>\n</template>\n\n<script>\nimport RangeInput from '@sfe/montage.range-input'\n\nexport default {\n  components: {\n    RangeInput\n  },\n  data () {\n    return {\n      formData: {\n        range: null\n      },\n      rules: {\n        range: [{ required: true }]\n      }\n    }\n  },\n  methods: {\n    handleSubmit () {\n      this.$refs.form.validate()\n    },\n    handleReset () {\n      this.$refs.form.resetFields()\n    }\n  }\n}\n</script>\n\n<style lang=\"less\" scoped>\n.divider {\n  line-height: 34px;\n  text-align: center;\n}\n</style>\n\n```\n:::\n\n\n## props\n\n| 属性 | 说明 | 类型 | 默认值 | 是否必须\n| :--- | :--- | :---| :--- | :---\n| value | 组件初始化值 | Array | [] | 是\n| precision | 最小&&最大值的精度 | Number | 2 | 否\n| minRange | 最小值的取值范围 | Array | [0, 99999999] | 否\n| maxRange | 最大值的取值范围 | Array | [0, 99999999] | 否\n| activeChange | 是否实时响应数据，为false时只在失焦时校验 | Boolean | false | 否\n| placeholders | 输入框无值的占位符 | Array | ['最小值', '最大值'] | 否\n\n## events\n事件名|说明|返回值\n:--|:--|:--\non-input|输入发生时的回调|当前值（形如[min, max]）\non-blur|失焦时触发|当前值\n\n## methods\n方法名|说明|入参|返回值\n--|:--|:-- | :---\nsetCurrentValue|手动设置组件取值|**value**：目标值(Array或Number)<br />**index**：需要改变的对象(0代表min,1代表max)，当index不填时，将value作为Array处理| - \n\n## slots\n插槽名|说明\n:--|:--\ndivider | 自定义中间分割线的样式\n\n","packageInfo":"","exports":"","ironcode":null,"misname":"wangqi82","starCount":0,"likeCount":0,"usedCount":0,"createTime":"2020-05-22T01:57:52.914Z","updateTime":"2021-04-08T14:39:57.155Z","component":{"id":81,"name":"range-input","cname":"范围输入","description":"范围输入组件。","status":0,"misname":"wangqi82","type":0,"moduleName":"","starCount":0,"downloadCount":null,"likeCount":0,"usedCount":0,"createTime":"2019-09-26T14:36:46.414Z","updateTime":"2020-05-22T01:57:52.000Z","versionNum":"1.0.1","author":[{"id":131,"accountId":2152630,"mis":"xiongyiyi","name":"熊伊伊","avatar":null,"email":"xiongyiyi@meituan.com","createTime":"2019-08-07T07:20:43.017Z","updateTime":"2019-08-07T07:20:43.017Z"}],"moduleKey":null}},{"id":591,"componentId":96,"componentName":"","componentModuleId":0,"versionNum":"1.0.0","flag":0,"imgs":"","guide":"# @sfe/montage.Tab-with-count","packageInfo":"","exports":"","ironcode":null,"misname":"liuzhe21","starCount":0,"likeCount":0,"usedCount":0,"createTime":"2020-05-24T09:50:54.464Z","updateTime":"2021-04-08T14:39:57.155Z","component":{"id":96,"name":"Tab-with-count","cname":"数字页签","description":"","status":0,"misname":"liuzhe21","type":0,"moduleName":"","starCount":0,"downloadCount":null,"likeCount":0,"usedCount":0,"createTime":"2020-05-24T09:50:54.451Z","updateTime":"2020-06-19T05:05:53.000Z","versionNum":"","author":[{"id":590,"accountId":2653217,"mis":"liuzhe21","name":"刘哲","avatar":null,"email":"liuzhe21@meituan.com","createTime":"2019-11-29T09:21:11.613Z","updateTime":"2019-11-29T09:21:11.613Z"}],"moduleKey":null}},{"id":592,"componentId":97,"componentName":"","componentModuleId":0,"versionNum":"1.0.0","flag":0,"imgs":"","guide":"# @sfe/montage.CategoryKvArea","packageInfo":"","exports":"","ironcode":null,"misname":"liuzhe21","starCount":0,"likeCount":0,"usedCount":0,"createTime":"2020-05-24T09:52:02.374Z","updateTime":"2021-04-08T14:39:57.155Z","component":{"id":97,"name":"CategoryKvArea","cname":"类目属性","description":"","status":0,"misname":"liuzhe21","type":0,"moduleName":"","starCount":0,"downloadCount":null,"likeCount":0,"usedCount":0,"createTime":"2020-05-24T09:52:02.359Z","updateTime":"2020-06-19T05:06:19.000Z","versionNum":"","author":[{"id":590,"accountId":2653217,"mis":"liuzhe21","name":"刘哲","avatar":null,"email":"liuzhe21@meituan.com","createTime":"2019-11-29T09:21:11.613Z","updateTime":"2019-11-29T09:21:11.613Z"}],"moduleKey":null}},{"id":676,"componentId":76,"componentName":"","componentModuleId":0,"versionNum":"1.0.2","flag":0,"imgs":"","guide":"<script>\n    export default {\n        data () {\n            return {\n                disabled: true,\n                value1: 1,\n                value2: 1,\n                value3: 2,\n                value4: 2,\n                value5: 2,\n                value6: 1,\n                value7: 1,\n                value8: 1,\n                value9: 1000,\n                value10: 100\n            }\n        },\n        mounted () {\n            this.$emit('load', 'input-number');\n        }\n    }\n</script>\n\n\n# InputNumber\n## 数字输入框\n使用鼠标或键盘输入一定范围的标准数值。\n\n### 基础用法\n用于输入一定范围的标准数值。\n\n:::demo <p>可以通过输入、鼠标点击或键盘的上下键来改变数值大小。</p>\n\n```html\n<template>\n    <InputNumber :max=\"10\" :min=\"1\" v-model=\"value1\"></InputNumber>\n</template>\n<script>\n    export default {\n        data () {\n            return {\n                value1: 1\n            }\n        }\n    }\n</script>\n\n```\n:::\n\n### 小数\n\n:::demo <p>通过设置<code>step</code>属性控制每次改变的精度。</p>\n\n```html\n<template>\n    <InputNumber :max=\"10\" :min=\"1\" :step=\"1.2\" v-model=\"value2\"></InputNumber>\n</template>\n<script>\n    export default {\n        data () {\n            return {\n                value2: 1\n            }\n        }\n    }\n</script>\n\n```\n:::\n\n### 格式化展示\n\n:::demo <p>通过 <code>formatter</code> 格式化数字，以展示具有具体含义的数据，往往需要配合 <code>parser</code> 一起使用。</p>\n\n```html\n<template>\n    <div>\n        <InputNumber\n            :max=\"10000\"\n            v-model=\"value9\"\n            :formatter=\"value => `$ ${value}`.replace(/B(?=(d{3})+(?!d))/g, ',')\"\n            :parser=\"value => value.replace(/$s?|(,*)/g, '')\"></InputNumber>\n        <InputNumber\n            :max=\"100\"\n            v-model=\"value10\"\n            :formatter=\"value => `${value}%`\"\n            :parser=\"value => value.replace('%', '')\"></InputNumber>\n    </div>\n</template>\n<script>\n    export default {\n        data () {\n            return {\n                value9: 1000,\n                value10: 100\n            }\n        }\n    }\n</script>\n\n```\n:::\n\n### 尺寸\n\n:::demo <p>通过设置<code>size</code>属性为<code>large</code>和<code>small</code>将输入框设置为大和小尺寸，不设置为默认（中）尺寸。</p>\n\n```html\n<template>\n    <InputNumber v-model=\"value3\" size=\"small\"></InputNumber>\n    <InputNumber v-model=\"value4\"></InputNumber>\n    <InputNumber v-model=\"value5\" size=\"large\"></InputNumber>\n</template>\n<script>\n    export default {\n        data () {\n            return {\n                value3: 2,\n                value4: 2,\n                value5: 2\n            }\n        }\n    }\n</script>\n\n```\n:::\n\n### 不可用\n\n:::demo <p>通过设置<code>disabled</code>属性禁用输入框，点击按钮切换状态。</p>\n\n```html\n<template>\n    <InputNumber v-model=\"value6\" :disabled=\"disabled\"></InputNumber>\n    <Button type=\"primary\" @click=\"disabled = !disabled\">Toggle Disabled</Button>\n</template>\n<script>\n    export default {\n        data () {\n            return {\n                disabled: true,\n                value6: 1\n            }\n        }\n    }\n</script>\n\n```\n:::\n\n### 只读\n\n:::demo <p>通过设置<code>readonly</code>属性开启只读。</p>\n\n```html\n<template>\n    <InputNumber v-model=\"value7\" readonly></InputNumber>\n</template>\n<script>\n    export default {\n        data () {\n            return {\n                value7: 1\n            }\n        }\n    }\n</script>\n\n```\n:::\n\n<template>\n            <div class=\"api\">\n                <h2>API</h2>\n                <h3>InputNumber props</h3>\n                <table>\n                    <thead>\n                        <tr>\n                            <th>属性</th>\n                            <th>说明</th>\n                            <th>类型</th>\n                            <th>默认值</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr>\n                            <td>max</td>\n                            <td>最大值</td>\n                            <td>Number</td>\n                            <td>Infinity</td>\n                        </tr>\n                        <tr>\n                            <td>min</td>\n                            <td>最小值</td>\n                            <td>Number</td>\n                            <td>-Infinity</td>\n                        </tr>\n                        <tr>\n                            <td>value</td>\n                            <td>当前值，可以使用 v-model 双向绑定数据</td>\n                            <td>Number</td>\n                            <td>1</td>\n                        </tr>\n                        <tr>\n                            <td>step</td>\n                            <td>每次改变的步伐，可以是小数</td>\n                            <td>Number</td>\n                            <td>1</td>\n                        </tr>\n                        <tr>\n                            <td>size</td>\n                            <td>输入框尺寸，可选值为<code>large</code>、<code>small</code>、<code>default</code>或者不填</td>\n                            <td>String</td>\n                            <td>-</td>\n                        </tr>\n                        <tr>\n                            <td>disabled</td>\n                            <td>设置禁用状态</td>\n                            <td>Boolean</td>\n                            <td>false</td>\n                        </tr>\n                        <tr>\n                            <td>placeholder</td>\n                            <td>占位文本</td>\n                            <td>String</td>\n                            <td>-</td>\n                        </tr>\n                        <tr>\n                            <td>formatter</td>\n                            <td>指定输入框展示值的格式</td>\n                            <td>Function</td>\n                            <td>-</td>\n                        </tr>\n                        <tr>\n                            <td>parser</td>\n                            <td>指定从 formatter 里转换回数字的方式，和 formatter 搭配使用</td>\n                            <td>Function</td>\n                            <td>-</td>\n                        </tr>\n                        <tr>\n                            <td>readonly</td>\n                            <td>是否设置为只读</td>\n                            <td>Boolean</td>\n                            <td>false</td>\n                        </tr>\n                        <tr>\n                            <td>editable</td>\n                            <td>是否可编辑</td>\n                            <td>Boolean</td>\n                            <td>true</td>\n                        </tr>\n                        <tr>\n                            <td>precision</td>\n                            <td>数值精度</td>\n                            <td>Number</td>\n                            <td>-</td>\n                        </tr>\n                        <tr>\n                            <td>element-id</td>\n                            <td>给表单元素设置 <code>id</code>，详见 Form 用法。</td>\n                            <td>String</td>\n                            <td>-</td>\n                        </tr>\n                        <tr>\n                            <td>active-change</td>\n                            <td>是否实时响应数据，设置为 false 时，只会在失焦时更改数据</td>\n                            <td>Boolean</td>\n                            <td>true</td>\n                        </tr>\n                    </tbody>\n                </table>\n                <h3>InputNumber events</h3>\n                <table>\n                    <thead>\n                        <tr>\n                            <th>事件名</th>\n                            <th>说明</th>\n                            <th>返回值</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr>\n                            <td>on-change</td>\n                            <td>数值改变时的回调，返回当前值</td>\n                            <td>当前值</td>\n                        </tr>\n                        <tr>\n                            <td>on-focus</td>\n                            <td>聚焦时触发</td>\n                            <td>event</td>\n                        </tr>\n                        <tr>\n                            <td>on-blur</td>\n                            <td>失焦时触发</td>\n                            <td>-</td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n</template>\n","packageInfo":"","exports":"","ironcode":null,"misname":"liuzhe21","starCount":1,"likeCount":0,"usedCount":0,"createTime":"2020-05-25T09:29:57.991Z","updateTime":"2021-04-29T09:17:08.000Z","component":{"id":76,"name":"input-number","cname":"数字输入框","description":"bootes(iview)中已经有一个input-number组件，但是使用过程中，我们发现，除了存在一些bug之外，它的交互设计（特别是设置了精度precesion时）也不符合我们日常使用习惯，因此，它对我们来说基本属于不可用的。所以，我们重新开发了这个input-number组件。","status":0,"misname":"liuzhe21","type":0,"moduleName":"","starCount":2,"downloadCount":null,"likeCount":0,"usedCount":0,"createTime":"2019-09-26T14:34:22.797Z","updateTime":"2021-04-29T09:17:08.000Z","versionNum":"1.0.2","author":[{"id":51,"accountId":2273538,"mis":"renlingling","name":"任玲玲","avatar":null,"email":"renlingling@meituan.com","createTime":"2019-07-30T09:27:26.266Z","updateTime":"2019-07-30T09:27:26.266Z"}],"moduleKey":null}}]},"msg":"ok"},"productCommonPackage":{"code":0,"data":{"id":96,"name":"productCommonPackage","cname":"商家商品通用物料包","create_time":"2021-06-21T10:00:23.719Z","compIds":"290","usedCount":0,"downloadCount":14,"version":[{"id":961,"componentId":290,"componentName":"","componentModuleId":162,"versionNum":"1.0.0","flag":0,"imgs":"","guide":"# 组件简介\n\n## 1.使用方式\n### 安装组件\n```shell script\nmnpm install @sfe/montage.agreement-modal.eyJpZCI6MTYyfQ\n```\n\n## 2.使用示例 \n\n\n\n\n\n## 3.组件属性\n\n| 属性               | 说明                                                                                                        | 类型                    | 默认值                    | 是否必须 |\n| ------------------ | ----------------------------------------------------------------------------------------------------------- | ----------------------- | ------------------------- | -------- |\n| colMinWidth（示例）  | 每列最小宽度                                                                                                | Number                  | 100                       | 否       |\n| height（示例）             | 列表高度                                                                                                    | Number                  | auto:高度自适应           | 否       |\n \n\n\n## 4.组件事件\n| 事件名          | 返回值      | 说明                                |\n| --------------- | ----------- | ----------------------------------- |\n| onChange（示例）      | respnseData | 请求数据返回时触发                  |\n\n\n","packageInfo":"{\n  \"cname\": \"\",\n  \"description\": \"\",\n  \"tags\": \"\",\n  \"author\": \"\",\n  \"name\": \"@sfe/montage.agreement-modal.eyJpZCI6MTYyfQ\",\n  \"virtualId\": \"agreement-modal.eyJpZCI6MTYyfQ\",\n  \"_isCreate\": false,\n  \"_entry\": \"index.vue\",\n  \"main\": \"dist/agreement-modal.umd.js\",\n  \"version\": \"1.0.0\",\n  \"browserslist\": {\n    \"production\": [\n      \">0.2%\",\n      \"not dead\",\n      \"not op_mini all\"\n    ],\n    \"development\": []\n  },\n  \"componentName\": \"agreement-modal\",\n  \"buildOptions\": {\n    \"framework\": \"vue\",\n    \"frameworkVersion\": \"2.6.10\",\n    \"hasComponentLib\": 1,\n    \"componentLibName\": \"@roo-design/roo-vue\",\n    \"componentLibVersion\": \"2.0.13\"\n  },\n  \"devDependencies\": {\n    \"rollup\": \"2.35.1\",\n    \"rollup-plugin-commonjs\": \"10.1.0\",\n    \"rollup-plugin-postcss\": \"4.0.0\",\n    \"rollup-plugin-node-resolve\": \"5.2.0\",\n    \"rollup-plugin-babel\": \"4.4.0\",\n    \"rollup-plugin-terser\": \"7.0.2\",\n    \"rollup-plugin-json\": \"4.0.0\",\n    \"rollup-plugin-peer-deps-external\": \"2.2.4\",\n    \"@babel/core\": \"7.12.3\",\n    \"@babel/preset-env\": \"7.12.11\",\n    \"postcss\": \"8.2.1\",\n    \"rollup-plugin-vue\": \"5.1.7\",\n    \"vue-template-compiler\": \"2.6.10\",\n    \"less\": \"4.0.0\",\n    \"@vue/babel-preset-jsx\": \"1.2.4\"\n  },\n  \"peerDependencies\": {\n    \"vue\": \"2.6.10\",\n    \"@roo-design/roo-vue\": \"2.0.13\"\n  },\n  \"scripts\": {\n    \"build\": \"rollup -c\"\n  }\n}","exports":"default","ironcode":{},"misname":"wangqi82","starCount":0,"likeCount":0,"usedCount":0,"createTime":"2021-06-21T12:11:48.732Z","updateTime":"2021-06-21T12:11:48.732Z","component":{"id":290,"name":"agreement-modal","cname":"","description":"","status":0,"misname":"","type":0,"moduleName":"","starCount":0,"downloadCount":null,"likeCount":0,"usedCount":0,"createTime":"2021-06-21T12:11:48.711Z","updateTime":"2021-06-21T12:11:48.711Z","versionNum":"1.0.0","author":[{"id":66,"accountId":2416815,"mis":"wangqi82","name":"王琦","avatar":null,"email":"wangqi82@meituan.com","createTime":"2019-07-31T06:52:50.686Z","updateTime":"2019-07-31T06:52:50.686Z"}],"moduleKey":{"id":162,"name":"agreement-modal.eyJpZCI6MTYyfQ"}}}]},"msg":"ok"}}